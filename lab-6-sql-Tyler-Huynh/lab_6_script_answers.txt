Name: <Your Name>

###Answer Scripts


##SECTION 3

#3.1 :Write an SQL Script to create a new table to hold information on the competing universities. The table should hold the following information:

  University Name (Text) (Note: University Name should be unique and set as PRIMARY KEY)
  Date Established (Date)
  Address (Address)
  Student Population (Int)
  Acceptance Rate (Decimal)

>> (Your Answer here)

create TABLE university(
  university_name VARCHAR(200) PRIMARY KEY, 
  date_established DATE NOT NULL, 
  university_address TEXT, 
  student_population INT, 
  acceptance_rate REAL); 



#3.2 Write an insert statement to add the University Information The table should hold the following information:

       University Name :- CU Boulder
       Date Established :- 1876
       Address :- 1100 28th St, Boulder, CO 80303
       Student Population :- 35,000
       Acceptance Rate :- 80%

>> (Your Answer here)
INSERT INTO university(university_name, date_established, university_address, student_population, acceptance_rate)
VALUES('CU Boulder', '18760401', '1100 28th. St. Boulder CO 80303', 35000, .80);


##SECTION 4

#4.1 Write a script to list the Football Players (name & major), organized by major in college.
SELECT name, major
FROM football_players;
>>

#4.2 Write a script to list all of the Football Players (name & rushing yards) who have 70 or more rushing yards.
SELECT name, rushing_yards
FROM football_players
WHERE rushing_yards BETWEEN 70 AND 200;
>>

#4.3 Write a script to list all of the games played against Nebraska (show all game information).
SELECT * FROM football_games WHERE visitor_name = 'Nebraska';

>>

#4.4 Write a script to list all of the games CU Boulder has won.
SELECT * FROM football_games WHERE home_score > 25 AND visitor_score < 40;
>>

#4.5 Write a script to list all of the games played in the Fall 2020 Season (show team name & game date).
SELECT visitor_name, game_date
FROM football_games 
WHERE game_date BETWEEN 2020-08-31 AND 2020-01-01;
>>

#4.6 Write a script to list the average number of points CU has scored in past games.
SELECT AVG(home_score)
FROM football_games
>>

#4.7 Write a script to list the majors of the Football players and calculate how many of them are in each of the majors listed. Rename the column where you calculate the majors to number_of_players.
SELECT major, COUNT(*)
AS number_of_players
FROM football_players
GROUP BY major;
>>

#4.8 Write a script to modify the above query in 5.6 to include only the Football players who are majoring in Computer Science.
SELECT major, COUNT(*)
AS number_of_players
FROM football_players
WHERE major =
>>


##SECTION 5

#5.1 Write a script to create a view that counts the total number of winning games.
CREATE VIEW winning_games 
AS 
  SELECT COUNT(home_score)
  AS winning_games
  FROM football_games
  WHERE home_score > visitor_score;
>>

#5.2 Write a script to create a view that counts the total number of games played.
CREATE VIEW games_played
AS 
  SELECT COUNT(game_date)
  AS games
  FROM football_games;
>>

#5.3 Write a script that uses the two views you created (from 5.1 and 5.2) to calculate the percent of wins.
SELECT AVG(CAST(winning_games AS FLOAT)/CAST(games AS FLOAT) * 100)
AS Win_Percentage
FROM winning_games, games_played;
>>


##SECTION 6

#6.1 Write a script that will count how many games "Cedric Vega" has played in during his entire football career.
SELECT COUNT(football_players.id)
FROM football_games
JOIN football_players
ON football_players.id = ANY(football_games.players)
WHERE football_players.id = 1;
>>

#6.2 Write a script that will calculate the average number of rushing yards for "Cedric Vega", based on the number of games he has played.
SELECT AVG(CAST(rushing_yards AS FLOAT)) / COUNT(CAST(football_players.id AS FLOAT))
AS average_rushing_yards
FROM football_games
JOIN football_players
ON football_players.id = ANY(football_games.players)
WHERE football_players.id = 1;
>>




